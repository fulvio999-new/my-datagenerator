<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>my-datagenerator</groupId>
  <artifactId>my-datagenerator</artifactId>
  <version>1.0</version>
  <packaging>jar</packaging>

  <name>my-datagenerator</name>
  
  <properties>
     <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>
  
    <dependency>
      	<groupId>junit</groupId>
      	<artifactId>junit</artifactId>
      	<version>4.10</version>
      	<scope>test</scope>
    </dependency>
    
    <dependency>
       <groupId>log4j</groupId>
  	   <artifactId>log4j</artifactId>
   	   <version>1.2.17</version>
    </dependency>

    <dependency>
		<groupId>commons-collections</groupId>
  		<artifactId>commons-collections</artifactId>
  		<version>3.2.1</version>
    </dependency>
    
    <!-- Used for String generator -->
    <dependency>
		<groupId>org.apache.commons</groupId>
		<artifactId>commons-lang3</artifactId>
		<version>3.1</version>
	</dependency>
	
	<!-- To have a connection pool manager features, useful for long task and prevent timeout -->
	<dependency>
		<groupId>commons-dbcp</groupId>
  		<artifactId>commons-dbcp</artifactId>
  		<version>1.3</version>
   </dependency>

    <dependency>
	 	<groupId>org.dbunit</groupId>
  		<artifactId>dbunit</artifactId>
   		<version>2.4.8</version>
    </dependency>

   <dependency>
    	<groupId>mysql</groupId>
    	<artifactId>mysql-connector-java</artifactId>
    	<version>[5.1,)</version> <!-- A version greater or equals at 5.1 -->
 	</dependency>

   <dependency>
    	<groupId>org.slf4j</groupId>
    	<artifactId>slf4j-api</artifactId>
    	<version>1.6.3</version>
 	</dependency>

 	<!-- Layout library --> 
 	<dependency>
  	 	<groupId>com.miglayout</groupId>
  	 	<artifactId>miglayout-swing</artifactId>
  	 	<version>4.2</version>
 	</dependency>
 
 	<dependency>
		<groupId>org.swinglabs</groupId>
		<artifactId>swingx</artifactId>
		<version>1.6.1</version>
 	</dependency>	

  </dependencies>

	<build>
	
		<resources>
	      <resource>
			 <directory>src/main/resources</directory>
			 <filtering>false</filtering>
			 <includes>				
				<include>*.properties</include>	
				<include>*.txt</include>			
			 </includes>
		  </resource>
	    </resources>
	
	
		<plugins>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>				
			</plugin>
			
		    <plugin>
			  <groupId>org.apache.maven.plugins</groupId>
			  <artifactId>maven-compiler-plugin</artifactId>
			  <configuration>
				 <source>1.5</source>
				 <target>1.5</target>
			  </configuration>
		   </plugin>
		   
		   
		  <!-- Configure the jar plugin to use a custom Manifest file to insert the main-class -->
	      <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-jar-plugin</artifactId>
		        <configuration>
		          <archive>
		            <manifest> 
		            	<addClasspath>true</addClasspath>          
		             	<mainClass>mydatagenerator.init.StartApp</mainClass>
		            </manifest>
		          </archive>
		        </configuration>
	      </plugin>
	      
	      <!-- Plugin execute during the package phase to package the project as jar with inside the necessary lib jar 
	           This plugin can also be execute with:  mvn assembly:assembly 
	      -->		
		  <plugin>
		    	<artifactId>maven-assembly-plugin</artifactId>
		    	<configuration>
			        <archive>
			            <manifest>
			                <mainClass>mydatagenerator.init.StartApp</mainClass>
			            </manifest>
			        </archive>
			        <descriptorRefs>
			            <descriptorRef>jar-with-dependencies</descriptorRef>
			        </descriptorRefs>
			        <finalName>my-datagenerator-${project.version}-bin</finalName>
			        
			        <!-- to don't append the suffix 'jar-with-dependencies' -->
                    <appendAssemblyId>false</appendAssemblyId> 			        
		    	</configuration>
		    	
		    	<executions>
		          <execution>
		            <id>make-assembly</id> <!-- this is used for inheritance merges -->
		            <phase>package</phase> <!-- bind the execution of the plugin to the packaging phase -->
		            <goals>
		              <goal>single</goal>
		            </goals>
		          </execution>
		        </executions>		    	
		  </plugin>		   
			
		</plugins>
		
	   
		
	    <!-- TODO: add entry for maven assembly plugin -->
		
	</build>

</project>
