
----- Notes taken during the developemnt -----

*** In Mysql we have to type of partitioning:
LIST partitioning http://dev.mysql.com/doc/refman/5.1/en/partitioning-list.html
 for each partitioning we list all the value:

PARTITION BY LIST(store_id) (
    PARTITION pNorth VALUES IN (3,5,6,9,17),
    .....
)

Mean that the values of the table field "stores" equals at 3,5,6,9,17 goes in the partition named 'pNorth'


----------------------------------------------------------------------------------------
RANGE partitioning http://dev.mysql.com/doc/refman/5.1/en/partitioning-range.html

Ranges should be contiguous but not overlapping


PARTITION BY RANGE (store_id) (
    PARTITION p0 VALUES LESS THAN (6),
    
    .....
    
)

Mean that all rows with a 'store_id' 1 through 5 are stored in partition named p0   


Note that each partition is defined in order, from lowest to highest. This is a requirement of the PARTITION BY RANGE syntax;

----------------------------------------------------------------------------------------
Insert of values that not match any partition See http://dev.mysql.com/doc/refman/5.1/en/partitioning-list.html:

Add the condition IGONRE
INSERT IGNORE INTO h2 VALUES (....)

so that only the values that match a partition will be inserted, the others one will not be inserted

BUT: can happen that a table has less record than the number of row to insert and cause some problem when i try to fill a parent table ???

----------------------------------------------------------------------------------------

********* Useful Query to get info about table partition: ***********

See http://dev.mysql.com/doc/refman/5.6/en/partitions-table.html

To know in which partitions of the table "trb1" the value 5 will be placed "id" is the column name
EXPLAIN PARTITIONS SELECT * FROM trb1 WHERE id < 5

Attention:
As of MySQL 5.6.3, EXPLAIN provides information about SELECT, DELETE, INSERT, REPLACE, and UPDATE statements. 
Before MySQL 5.6.3, EXPLAIN provides information ONLY about SELECT statements. 


Query to return the function used to decide the destination partition:

SELECT DISTINCT PARTITION_EXPRESSION
 FROM INFORMATION_SCHEMA.PARTITIONS
WHERE TABLE_NAME='event' AND TABLE_SCHEMA='imm2'; 

-------------------------------------------------------------------------------------------

Get other detailed informations about a table ():

show table status;
show table status where Name like 'my-table'


++++++++++++ know which partition will be used by a query: See http://dev.mysql.com/doc/refman/5.1/en/explain.html




  
